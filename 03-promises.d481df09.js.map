{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAWH,SAASC,cAAc,mBAClCG,EAAOJ,SAASC,cAAc,SA6BpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAGlBA,E,IAvCPH,EAAKW,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAQN,IALA,IAAIC,EAAW,EACXC,EAAQC,OAAOrB,EAAWsB,OACxBC,EAAOF,OAAOlB,EAAUmB,OACxBE,EAASH,OAAOjB,EAASkB,OAEtBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAG/BnB,EAFAa,GAAY,EAEYC,GACzBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAChBV,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE/DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBV,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE1DY,GAASG,EAEXlB,EAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["// библиотека notiflix\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  \n\n  let position = 0;\n  let delay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n  const amount = Number(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n     Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n  form.reset()\n  }\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    else {\n      reject({ position, delay });\n    }\n      \n    }, delay)\n  })\n\n  \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","position1","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.d481df09.js.map"}